{"version":3,"names":["buildHeader","method","data","common_vendor","index","__f__","version","clientID","clientSecret","nonce","CryptoJS","MD5","parseInt","Math","random","toString","timestamp","Date","parse","body","enc","Base64","stringify","Utf8","json","plainText","sign","HmacSHA256","headers","token","getStorageSync","access","args","statusCode","showToast","title","icon","duration","reLaunch","url","setTimeout","navigateBack","delta","addInterceptor","invoke","utils_config","config","API_URL","timeout","header","success","fail","err","complete","res","request","send","options"],"sources":["request.js"],"sourcesContent":["import CryptoJS from 'crypto-js'\r\nimport config from \"./config\"\r\n\r\n\r\nconst buildHeader = (method, data) => {\r\n\tconsole.log('buildHeader params ->', method, data)\r\n\tvar version = '1.0';\r\n\tvar clientID = '9f823d76-5a8f-4ca3-94bc-c80febdd6501';\r\n\tvar clientSecret = '96a9c3b06d93402a743605eedfbe72106fe1e967f1ec5f5bed7e8da90a033f1a';\r\n\tvar nonce = CryptoJS.MD5(parseInt(Math.random() * 32769 + 32768, 10).toString()).toString();\r\n\tvar timestamp = (Date.parse(new Date()) / 1000).toString();\r\n\t// Body\r\n\tvar body = '';\r\n\tif (method == 'POST') {\r\n\t    body = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(json.stringify(data)));\r\n\t}\r\n\t\r\n\tvar plainText = clientID + nonce + timestamp + version + body;\r\n\tvar sign = CryptoJS.HmacSHA256(plainText, clientSecret).toString();\r\n\tconsole.log('plainText:' + plainText, 'sign:' + sign)\r\n\r\n\tvar headers = {\r\n\t\t'Client-ID': clientID,\r\n\t\t'Nonce': nonce,\r\n\t\t'Timestamp': timestamp,\r\n\t\t'Signature': sign,\r\n\t\t'Version': version,\r\n\t}\r\n\t\r\n\t// token\r\n\tvar token = uni.getStorageSync('token')\r\n\tif (token) {\r\n\t    headers['Authorization'] = token\r\n\t}\r\n\r\n\treturn headers\r\n}\r\n\r\nconst access = (args) => {\r\n    switch (args.statusCode) {\r\n        case 401:\r\n            uni.showToast({ title: '请登录帐号', icon: 'none', duration: 3000 });\r\n            uni.reLaunch({ url: '/pages/my/login' })\r\n            break;\r\n        case 404:\r\n            uni.showToast({ title: '页面未发现', icon: 'none', duration: 3000 });\r\n            setTimeout( () => {\r\n                uni.navigateBack({ delta: 1 })\r\n            }, 2000);\r\n            break;\r\n        default:\r\n            // todo\r\n    }\r\n}\r\n\r\n// 拦截器\r\nuni.addInterceptor('request', {\r\n    invoke(args) {\r\n        // request 触发前拼接 url \r\n        args.url = config.API_URL + args.url\r\n        // 超时时间\r\n        args.timeout = 150000\r\n        // header\r\n        args.header = buildHeader(args.method, args.data)\r\n\t\tconsole.log(args)\r\n    },\r\n    success(args) {\r\n        // 请求成功后，修改code值为1\r\n        // args.data.code = 1\r\n        access(args)\r\n    }, \r\n    fail(err) {\r\n        console.log('interceptor-fail',err)\r\n        access(err)\r\n    }, \r\n    complete(res) {\r\n        // console.log('interceptor-complete',res)\r\n    }\r\n})\r\n\r\nexport default {\r\n    send(options) {\r\n        return uni.request(options)\r\n    }\r\n}"],"mappings":"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","ignoreList":[]}